<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 0.8
spd = 3.5
jspd = 8.5
hspd = 0
vspd = 0
cspd = -2

global.MP40ammo = 32
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hspd = 3.5{
sprite_index = spr_player
}

if hspd = -3.5{
sprite_index = spr_player
}

if hspd = 0{
sprite_index = spr_player_idle
}

var rkey = keyboard_check(vk_right)
var lkey = keyboard_check(vk_left)
var jkey = keyboard_check(vk_up)
var ckey = keyboard_check(vk_up)
var dckey = keyboard_check(vk_down)
//
if place_meeting(x,y+1, obj_solid) {
         vspd = 0
                   //
                   if (jkey) {
                        vspd=-jspd
                   }
}
else {
//
if (vspd&lt;10)
     vspd+=grav
}

//
if (rkey) {hspd = spd
image_xscale=1

if (place_meeting(x-1, y, obj_solid) &amp;&amp; !place_meeting(x,y+1, obj_solid) &amp;&amp; !lkey)
                 vspd=-jspd
}            

//
if (lkey) {hspd = -spd
image_xscale=-1

if (place_meeting(x+1, y, obj_solid) &amp;&amp; !place_meeting(x,y+1, obj_solid) &amp;&amp; !rkey)
                 vspd=-jspd
}

//
if ((!rkey &amp;&amp; !lkey) || (rkey &amp;&amp; lkey)) {
hspd = 0
}
//Climbing

if (ckey) &amp;&amp; place_meeting(x,y, obj_ladder) {
vspd = cspd
}
//
if keyboard_check_released(vk_up) &amp;&amp; place_meeting(x,y, obj_ladder){
vspd = 0
}
//
if place_meeting(x,y, obj_ladder)=false{
grav=0.8
}
if place_meeting(x,y, obj_ladder) &amp;&amp; keyboard_check(vk_up)=false{
vspd = 0
}
if (dckey) &amp;&amp; place_meeting(x,y,obj_ladder){
vspd = -cspd
}
//hor

if (place_meeting(x+hspd, y, obj_solid)){
    while (!place_meeting(x+sign(hspd),y, obj_solid)) {
        x+=sign(hspd)
    }
    hspd = 0
}

//vert

x += hspd

if (place_meeting(x, y+vspd, obj_solid)){
    while (!place_meeting(x,y+sign(vspd), obj_solid)) {
        y+=sign(vspd)
    }
    vspd = 0
}

//

y += vspd

//

 if keyboard_check(vk_space) &amp;&amp; global.MP40ammo &gt; 0 {
  instance_create(x,y,obj_bullet)
}

if keyboard_check_pressed(ord('R')){
global.MP40ammo = 32
sound_play(snd_reload)
}

if keyboard_check(vk_space) &amp;&amp; global.MP40ammo = 0{
sound_play(snd_cockgun)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(view_wview-15,view_yview-15,'ammo: global.MP40ammo')
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>13,13</point>
  </PhysicsShapePoints>
</object>
